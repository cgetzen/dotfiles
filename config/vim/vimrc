"source ~/defaults.vim

" General Settings
set viminfo+=n~/.local/vim/viminfo " XDG data
set backspace=2 "allow backspace
set hidden "Allow modifying buffers without saving
set ic "ignore case on search
set mouse=a "click on tabs
set number
if has("autocmd") " Open files in last known location
  au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
    \| exe "normal! g'\"" | endif
endif

" Mappings
"gb for listing buffers
nnoremap gb :ls<CR>:b<Space>
:command WQ wq
:command Wq wq
:command W w
:command Q q
map <C-t><up> :tabr<cr>
map <C-t><down> :tabl<cr>
map <C-t><left> :tabp<cr>
map <C-t><right> :tabn<cr>
nnoremap <Left> :echo "No left for you!"<CR>
vnoremap <Left> :<C-u>echo "No left for you!"<CR>
inoremap <Left> <C-o>:echo "No left for you!"<CR>
nnoremap <Right> :echo "No right for you!"<CR>
vnoremap <Right> :<C-u>echo "No right for you!"<CR>
inoremap <Right> <C-o>:echo "No right for you!"<CR>
" install vimplug
if empty(glob('~/.local/vim/autoload/plug.vim'))
  silent !curl -fLo ~/.local/vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

source ~/.local/vim/autoload/plug.vim
" vim-plug
call plug#begin('~/.local/vim/plugged')
Plug 'preservim/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'junegunn/fzf', { 'do': './install --bin' }
Plug 'junegunn/fzf.vim'
Plug 'mg979/vim-visual-multi', {'branch': 'master'}
Plug 'airblade/vim-gitgutter'       " Git diff
Plug 'dense-analysis/ale'           " Linting
Plug 'tpope/vim-fugitive'           " Git in vim
Plug 'vim-utils/vim-man'            " :Man <cmd>
Plug 'vim-utils/vim-troll-stopper'  " highlights unicode
Plug 'psliwka/vim-smoothie'         " Scrolling
Plug 'mhinz/vim-startify'           " Startup page
call plug#end()

" dense-analysis/ale config
set omnifunc=ale#completion#OmniFunc
let g:ale_terraform_ls_options = '-log-file /tmp/ale_lsp.txt'
let g:ale_terraform_langserver_options = ' | tee /tmp/ale_lsp.txt'
let g:ale_lint_on_text_changed = 'always'
let g:ale_linter_aliases = {'tf': ['terraform']} " Allows filetype=tf to be linted properly
let g:ale_fix_on_save = 1
let g:ale_fixers = {'*': ['trim_whitespace', 'remove_trailing_lines'], 'tf': ['terraform']}
let g:ale_completion_enabled = 1 " Doesn't do anything yet
let g:ale_linters = {'tf': ['terraform_lsp', 'terraform_ls']}
let b:ale_terraform_ls_options = '-log-file /tmp/test.out'

" airblade/vim-gitgutter config
set updatetime=250 " So git-gutter is interactive
highlight clear SignColumn " git-gutter color parity


" preservim/nerdtree config
map <C-a> :NERDTreeTabsToggle<CR>
map ; :GFiles<CR>
